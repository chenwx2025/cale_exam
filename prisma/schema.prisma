// Prisma Schema for Cale Exam System
// 数据库架构设计

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// 考试信息元数据
model ExamInfo {
  id                String   @id @default(cuid())
  examType          String   @unique // 考试类型：cale 或 nccaom
  name              String   // 考试名称（中文）
  nameEn            String   // 考试名称（英文）
  fullName          String   // 考试全称
  description       String   // 考试简介
  duration          Int      // 考试时长（分钟）
  totalQuestions    Int      // 总题数
  passingScore      Int      // 及格分数（百分比）
  examFee           String?  // 考试费用
  examFormat        String?  // 考试形式（机考/笔试）
  retakePolicy      String?  // 重考政策
  validityPeriod    String?  // 证书有效期
  officialWebsite   String?  // 官方网站
  contentOverview   String   // 考试内容概述
  preparationTips   String?  // 备考建议
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

// 考试大纲分类
model Category {
  id              String     @id @default(cuid())
  name            String     // 分类名称（中文）
  nameEn          String?    // 分类名称（英文）
  code            String     // 分类代码（如：DOMAIN_1_ASSESSMENT、DOMAIN_2_DIAGNOSIS）
  examType        String     @default("cale") // 考试类型：cale（加州）、nccaom（全国）
  type            String     // 类型：organization（组织部分）、content（内容部分）、review（复习部分）
  description     String?    // 分类描述
  detailedInfo    String?    // 详细信息（考试占比、重点内容等）
  questionCount   Int?       // 该分类预期题目数量
  weight          Int?       // 考试权重（百分比）
  keyPoints       String?    // 重点知识点（JSON格式）
  studyTips       String?    // 学习建议
  parentId        String?    // 父分类ID（支持多级分类）
  parent          Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id], onDelete: Cascade)
  children        Category[] @relation("CategoryHierarchy")
  questions       Question[] // 该分类下的题目
  order           Int        @default(0) // 显示顺序
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@unique([code, examType]) // 同一考试类型内分类代码唯一
  @@index([type])
  @@index([examType])
  @@index([parentId])
}

// 题目
model Question {
  id             String           @id @default(cuid())
  examType       String           @default("cale") // 考试类型：cale（加州）、nccaom（全国）
  type           String           // 题型：multiple_choice（选择题）、true_false（判断题）、case_study（案例题）
  question       String           // 题目内容
  options        String?          // 选项（JSON格式，如：["A. 选项1", "B. 选项2"]）
  correctAnswer  String           // 正确答案
  explanation    String?          // 答案解析
  difficulty     String           @default("medium") // 难度：easy、medium、hard
  categoryId     String           // 所属分类
  category       Category         @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  tags           String?          // 标签（JSON格式，用于额外分类）
  source         String?          // 题目来源
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userAnswers    UserAnswer[]     // 用户答题记录
  studyPlans     StudyPlanItem[]  // 学习计划关联
  examAnswers    ExamAnswer[]     // 考试答题记录
  wrongQuestions WrongQuestion[]  // 错题本记录

  @@index([categoryId])
  @@index([difficulty])
  @@index([examType])
}

// 用户
model User {
  id                    String                  @id @default(cuid())
  email                 String                  @unique
  password              String                  // bcrypt 加密密码
  name                  String
  nickname              String?                 // 昵称
  avatar                String?                 // 头像URL
  role                  String                  @default("user") // user | admin
  emailVerified         Boolean                 @default(false)
  emailVerifyToken      String?                 // 邮箱验证 token
  emailVerifyExpires    DateTime?               // 邮箱验证过期时间
  resetPasswordToken    String?                 // 重置密码 token
  resetPasswordExpires  DateTime?               // 重置密码过期时间
  status                String                  @default("active") // active | suspended | deleted
  lastLoginAt           DateTime?               // 最后登录时间
  loginCount            Int                     @default(0) // 登录次数
  tokenVersion          Int                     @default(0) // Token 版本（用于撤销所有 token）
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt

  // 关联数据
  subscribedExams       UserExamSubscription[]  // 订阅的考试类型
  userAnswers           UserAnswer[]            // 用户答题记录
  studyPlans            StudyPlan[]             // 学习计划
  exams                 Exam[]                  // 模拟考试记录
  wrongQuestions        WrongQuestion[]         // 错题本
  studySessions         StudySession[]          // 学习会话
  notifications         Notification[]          // 通知消息
  notificationSettings  NotificationSettings?   // 通知设置
  pushSubscriptions     PushSubscription[]      // Push 通知订阅

  @@index([email])
  @@index([role])
  @@index([status])
}

// 用户答题记录
model UserAnswer {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questionId   String
  question     Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  userAnswer   String   // 用户的答案
  isCorrect    Boolean  // 是否正确
  timeSpent    Int?     // 答题时间（秒）
  attemptCount Int      @default(1) // 尝试次数
  createdAt    DateTime @default(now())

  @@index([userId])
  @@index([questionId])
  @@index([userId, questionId])
}

// 学习计划
model StudyPlan {
  id          String          @id @default(cuid())
  userId      String
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  name        String          // 计划名称
  description String?         // 计划描述
  examType    String          @default("cale") // 考试类型: cale, nccaom
  startDate   DateTime        // 开始日期
  endDate     DateTime        // 结束日期
  isActive    Boolean         @default(true)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  items       StudyPlanItem[] // 计划项目

  @@index([userId])
  @@index([examType])
}

// 学习计划项目
model StudyPlanItem {
  id           String     @id @default(cuid())
  studyPlanId  String
  studyPlan    StudyPlan  @relation(fields: [studyPlanId], references: [id], onDelete: Cascade)
  questionId   String
  question     Question   @relation(fields: [questionId], references: [id], onDelete: Cascade)
  scheduledFor DateTime   // 计划学习日期
  completed    Boolean    @default(false)
  completedAt  DateTime?
  notes        String?    // 学习笔记
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@index([studyPlanId])
  @@index([questionId])
}

// 模拟考试
model Exam {
  id            String        @id @default(cuid())
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  examType      String        @default("cale") // 考试类型: cale, nccaom
  title         String        // 考试标题
  categoryId    String?       // 选择的领域/分类（可选，null表示全领域）
  questionCount Int           // 题目数量
  duration      Int           // 考试时长（分钟）
  difficulty    String?       // 难度: easy, medium, hard, mixed
  mode          String        @default("exam") // 模式: exam（考试）, practice（练习）, ai_generated（AI生成题库）
  generatedBy   String?       // 生成方式: domain（按领域）, proportion（按比例）, manual（手动配置）
  status        String        @default("not_started") // 状态: not_started, in_progress, completed, abandoned
  startedAt     DateTime?     // 开始时间
  completedAt   DateTime?     // 完成时间
  timeSpent     Int?          // 实际用时（秒）
  score         Float?        // 得分
  totalScore    Float?        // 总分
  percentage    Float?        // 百分比得分
  passed        Boolean?      // 是否通过
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  answers       ExamAnswer[]  // 答题记录

  @@index([userId])
  @@index([examType])
  @@index([status])
  @@index([mode])
  @@index([generatedBy])
}

// 考试答题记录
model ExamAnswer {
  id         String   @id @default(cuid())
  examId     String
  exam       Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
  questionId String
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  userAnswer String?  // 用户答案（可能未答）
  isCorrect  Boolean? // 是否正确（提交后计算）
  timeSpent  Int?     // 答题时间（秒）
  isMarked   Boolean  @default(false) // 是否标记
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([examId])
  @@index([questionId])
}

// 错题本
model WrongQuestion {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  questionId   String
  question     Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  wrongCount   Int      @default(1) // 答错次数
  correctCount Int      @default(0) // 答对次数（重新练习时）
  lastWrong    DateTime @default(now()) // 最后一次答错时间
  lastCorrect  DateTime? // 最后一次答对时间
  mastered     Boolean  @default(false) // 是否已掌握
  masteryLevel Int      @default(0) // 掌握度（0-100）
  notes        String?  // 个人笔记
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId, questionId])
  @@index([userId])
  @@index([questionId])
  @@index([mastered])
  @@index([userId, mastered])
}

// 学习会话（用于追踪学习时长）
model StudySession {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  examType  String   @default("cale") // 考试类型
  type      String   // 会话类型：practice（练习）、exam（考试）、review（复习）、wrong_questions（错题练习）
  startTime DateTime @default(now())
  endTime   DateTime?
  duration  Int?     // 持续时间（秒）
  questionsCount Int @default(0) // 本次学习题目数
  correctCount   Int @default(0) // 答对数
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([examType])
  @@index([type])
  @@index([startTime])
}

// 用户考试订阅
model UserExamSubscription {
  id           String    @id @default(cuid())
  userId       String
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  examType     String    // cale | nccaom
  isActive     Boolean   @default(true)
  subscribedAt DateTime  @default(now())
  expiresAt    DateTime? // 订阅过期时间（如果是付费订阅）
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@unique([userId, examType])
  @@index([userId])
  @@index([examType])
  @@index([isActive])
}

// 管理员操作日志
model AdminLog {
  id         String   @id @default(cuid())
  adminId    String   // 管理员用户ID
  action     String   // 操作类型: create_question, update_question, delete_question, etc.
  targetType String   // 操作对象类型: question, user, category, etc.
  targetId   String?  // 操作对象ID
  details    String?  // 操作详情 JSON
  ipAddress  String?
  userAgent  String?
  createdAt  DateTime @default(now())

  @@index([adminId])
  @@index([action])
  @@index([targetType])
  @@index([createdAt])
}

// 通知消息
model Notification {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      String   // study_reminder（学习提醒）、exam_reminder（考试提醒）、achievement（成就）、system（系统消息）
  title     String   // 通知标题
  message   String   // 通知内容
  link      String?  // 相关链接（可选）
  isRead    Boolean  @default(false) // 是否已读
  createdAt DateTime @default(now())
  readAt    DateTime? // 阅读时间

  @@index([userId])
  @@index([isRead])
  @@index([type])
  @@index([createdAt])
  @@index([userId, isRead])
}

// 通知设置
model NotificationSettings {
  id                String  @id @default(cuid())
  userId            String  @unique
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  // 通知渠道开关
  emailEnabled      Boolean @default(true)   // 邮件通知
  siteEnabled       Boolean @default(true)   // 站内信通知

  // 通知类型开关
  studyReminder     Boolean @default(true)   // 学习提醒
  examReminder      Boolean @default(true)   // 考试提醒
  achievementAlert  Boolean @default(true)   // 成就通知
  systemAlert       Boolean @default(true)   // 系统通知

  // 学习提醒设置
  reminderTime      String  @default("19:00") // 提醒时间 HH:mm
  reminderDays      String  @default("[1,2,3,4,5]") // 提醒日期（JSON数组，0=周日,1=周一...6=周六）
  reminderFrequency String  @default("daily") // 提醒频率: daily（每天）、weekly（每周）、custom（自定义）

  // 学习目标
  dailyGoalMinutes  Int     @default(30)     // 每日学习目标（分钟）
  dailyGoalQuestions Int    @default(20)     // 每日题目目标

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@index([userId])
}

// 系统设置
model SystemSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String   // JSON 格式
  description String?
  category    String   // auth, exam, notification, etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedBy   String?  // 更新者用户ID

  @@index([category])
  @@index([key])
}
// Push 通知订阅（Phase 5 Sprint 2）
model PushSubscription {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  endpoint  String   @unique // Push 订阅端点
  auth      String   // 认证密钥
  p256dh    String   // 公钥
  userAgent String?  // 用户代理（浏览器信息）
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([endpoint])
}

// 分享记录（Phase 5 Sprint 3）
model Share {
  id          String          @id @default(cuid())
  userId      String
  shareType   String          // achievement（成就）、exam（考试成绩）、milestone（里程碑）
  title       String          // 分享标题
  description String?         // 分享描述
  imageUrl    String?         // 分享卡片图片URL
  content     String          // 分享内容（JSON格式）
  isPublic    Boolean         @default(true) // 是否公开
  viewCount   Int             @default(0) // 浏览次数
  likeCount   Int             @default(0) // 点赞次数
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  expiresAt   DateTime?       // 分享过期时间（可选）
  comments    ShareComment[]  // 评论
  reactions   ShareReaction[] // 反应

  @@index([userId])
  @@index([shareType])
  @@index([isPublic])
  @@index([createdAt])
}

// 分享评论（Phase 6 Sprint 4）
model ShareComment {
  id        String   @id @default(cuid())
  shareId   String
  share     Share    @relation(fields: [shareId], references: [id], onDelete: Cascade)
  userId    String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([shareId])
  @@index([userId])
  @@index([createdAt])
}

// 分享反应（Phase 6 Sprint 4）
model ShareReaction {
  id        String   @id @default(cuid())
  shareId   String
  share     Share    @relation(fields: [shareId], references: [id], onDelete: Cascade)
  userId    String
  type      String   // like, love, celebrate, insightful
  createdAt DateTime @default(now())

  @@unique([shareId, userId])
  @@index([shareId])
  @@index([userId])
}

// 用户资料（Phase 6 Sprint 4）
model UserProfile {
  id        String   @id @default(cuid())
  userId    String   @unique
  bio       String?  // 个人简介
  location  String?  // 位置
  website   String?  // 个人网站
  timezone  String?  // 时区
  studyGoal String?  // 学习目标
  bannerUrl String?  // 横幅图片URL
  isPublic  Boolean  @default(true) // 是否公开资料
  showStats Boolean  @default(true) // 是否显示统计
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

// 用户关注关系（Phase 6 Sprint 4）
model UserFollow {
  id          String   @id @default(cuid())
  followerId  String   // 关注者ID
  followingId String   // 被关注者ID
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

// 学习小组（Phase 6 Sprint 4）
model StudyGroup {
  id          String             @id @default(cuid())
  name        String             // 小组名称
  description String?            // 小组描述
  examType    String             // 考试类型: cale, nccaom
  isPublic    Boolean            @default(true) // 是否公开
  maxMembers  Int                @default(50) // 最大成员数
  createdBy   String             // 创建者ID
  avatarUrl   String?            // 小组头像
  bannerUrl   String?            // 小组横幅
  rules       String?            // 小组规则
  tags        String?            // 标签（JSON）
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  members     StudyGroupMember[]
  posts       StudyGroupPost[]
  challenges  GroupChallenge[]

  @@index([examType])
  @@index([isPublic])
  @@index([createdBy])
  @@index([createdAt])
}

// 学习小组成员（Phase 6 Sprint 4）
model StudyGroupMember {
  id        String     @id @default(cuid())
  groupId   String
  group     StudyGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  userId    String
  role      String     @default("member") // member, moderator, admin
  joinedAt  DateTime   @default(now())
  isActive  Boolean    @default(true)

  @@unique([groupId, userId])
  @@index([groupId])
  @@index([userId])
  @@index([role])
}

// 小组帖子（Phase 6 Sprint 4）
model StudyGroupPost {
  id        String     @id @default(cuid())
  groupId   String
  group     StudyGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  userId    String
  content   String     // 帖子内容
  type      String     @default("discussion") // discussion, question, announcement, resource
  isPinned  Boolean    @default(false) // 是否置顶
  likeCount Int        @default(0)
  replyCount Int       @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@index([groupId])
  @@index([userId])
  @@index([type])
  @@index([createdAt])
  @@index([isPinned])
}

// 小组挑战（Phase 6 Sprint 4）
model GroupChallenge {
  id          String     @id @default(cuid())
  groupId     String
  group       StudyGroup @relation(fields: [groupId], references: [id], onDelete: Cascade)
  name        String     // 挑战名称
  description String?    // 挑战描述
  examType    String     // 考试类型
  categoryId  String?    // 分类ID（可选）
  targetType  String     // questions_count, study_time, exam_score, accuracy
  targetValue Int        // 目标值
  startDate   DateTime   // 开始日期
  endDate     DateTime   // 结束日期
  createdBy   String
  createdAt   DateTime   @default(now())

  @@index([groupId])
  @@index([examType])
  @@index([startDate])
  @@index([endDate])
}

// 成就定义（Phase 6 Sprint 4）
model Achievement {
  id              String            @id @default(cuid())
  code            String            @unique // 成就代码（唯一标识）
  name            String            // 成就名称
  nameEn          String            // 英文名称
  description     String            // 成就描述
  descriptionEn   String            // 英文描述
  category        String            // 分类: streak, questions, exams, accuracy, social, groups
  icon            String            // 图标
  rarity          String            @default("common") // 稀有度: common, rare, epic, legendary
  points          Int               @default(0) // 奖励积分
  criteria        String            // 达成条件（JSON）
  order           Int               @default(0) // 显示顺序
  isActive        Boolean           @default(true)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userAchievements UserAchievement[]

  @@index([category])
  @@index([rarity])
  @@index([isActive])
}

// 用户成就（Phase 6 Sprint 4）
model UserAchievement {
  id            String      @id @default(cuid())
  userId        String
  achievementId String
  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)
  progress      Int         @default(0) // 进度（0-100）
  isUnlocked    Boolean     @default(false) // 是否已解锁
  unlockedAt    DateTime?   // 解锁时间
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@unique([userId, achievementId])
  @@index([userId])
  @@index([achievementId])
  @@index([isUnlocked])
}

// 用户积分（Phase 6 Sprint 4）
model UserPoints {
  id               String   @id @default(cuid())
  userId           String   @unique
  totalPoints      Int      @default(0) // 总积分
  currentRank      Int?     // 当前排名
  previousRank     Int?     // 之前排名
  weeklyPoints     Int      @default(0) // 本周积分
  monthlyPoints    Int      @default(0) // 本月积分
  questionsAnswered Int     @default(0) // 答题数
  correctAnswers   Int      @default(0) // 正确答案数
  studyTimeMinutes Int      @default(0) // 学习时长（分钟）
  streakDays       Int      @default(0) // 连续学习天数
  lastActivityAt   DateTime @default(now()) // 最后活动时间
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([userId])
  @@index([totalPoints])
  @@index([currentRank])
  @@index([weeklyPoints])
  @@index([monthlyPoints])
}

// 排行榜缓存（Phase 6 Sprint 4）
model LeaderboardEntry {
  id        String   @id @default(cuid())
  userId    String
  category  String   // global, weekly, monthly, category_specific
  examType  String?  // 考试类型（可选）
  rank      Int      // 排名
  score     Int      // 分数
  metric    String   // 度量类型: points, study_time, questions, accuracy
  period    String   // 时间段: daily, weekly, monthly, all_time
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, category, period])
  @@index([category])
  @@index([period])
  @@index([rank])
  @@index([examType])
}

// 用户活动（Phase 6 Sprint 4）
model UserActivity {
  id          String   @id @default(cuid())
  userId      String
  activityType String  // follow, achievement, exam_pass, group_join, share, milestone
  targetType  String?  // user, group, achievement, exam, share
  targetId    String?  // 目标ID
  content     String?  // 活动内容（JSON）
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())

  @@index([userId])
  @@index([activityType])
  @@index([createdAt])
  @@index([isPublic])
}
